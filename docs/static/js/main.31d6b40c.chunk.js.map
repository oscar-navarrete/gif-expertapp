{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","item","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OAEI,0BAAMC,SAZW,SAAEC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OASlB,2BACOO,KAAK,OACLC,MAAQT,EACRU,SApBa,SAACP,GACrBF,EAAeE,EAAEQ,OAAOF,YCNnBG,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACjC,OACI,yBAAKC,UAAU,yCACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAWF,GAD/C,+DAEAG,MAAOR,GAFP,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GAAO,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAabY,GAba,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEjBpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAJ8B,mBAEpCC,EAFoC,KAE7BC,EAF6B,KAqB3C,OAdCC,qBAAU,WAENlB,EAASC,GACLkB,MAAM,SAAAC,GAEAH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAIxB,CAAEd,IAGCe,EDjB6BK,CAAcpB,GAAlCW,EAHwB,EAG7BL,KAAaQ,EAHgB,EAGhBA,QAQrB,OACI,oCACC,4BAAMd,GAEJc,GAAW,uBAAGlB,UAAU,qCAAb,eACb,yBAAKA,UAAU,aAGJe,EAAOH,KAAI,SAAAa,GAAI,OACV,kBAAC,EAAD,eACKC,IAAKD,EAAKX,IACNW,UEOnBE,EA5BM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,cAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAQvB,OACI,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAGA,4BAEQ6C,EAAWhB,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACGsB,IAAMtB,EACNA,SAAWA,UCnBrCyB,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.31d6b40c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange=(e) =>{\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={ handleSubmit }>\r\n        <input \r\n               type=\"text\"\r\n               value={ inputValue }\r\n               onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n            \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__swing\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=Pw8shqKsZwOvczlxonyxn1FftnlDFubq`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map ( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    // useEffect( () =>{\r\n    //     getGifs( category )\r\n    //         .then( setImages );\r\n    // }, [ category ])\r\n\r\n\r\n    return (\r\n        <>\r\n         <h3>{ category }</h3>\r\n\r\n         { loading && <p className=\"animate__animated animate__wobble\">Cargando...</p> }\r\n         <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map(item => (\r\n                         <GifGridItem \r\n                              key={item.id}\r\n                              {...item}\r\n                         />  \r\n                    ))\r\n                }\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n const [state, setstate] = useState({\r\n     data: [],\r\n     loading: true\r\n });\r\n\r\n  useEffect(() => {\r\n\r\n      getGifs( category )\r\n         .then( imgs =>{\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n         })\r\n     \r\n  }, [ category ])\r\n\r\n\r\n return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    //const handdleAdd = ()=> {\r\n         //setCategories([...categories, 'HunterXHunter']);\r\n //   }\r\n\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2>\r\n           <AddCategory setCategories = { setCategories } />\r\n           <hr />   \r\n           \r\n\r\n           <ol>\r\n               {\r\n                   categories.map( category =>\r\n                       <GifGrid\r\n                          key={ category } \r\n                          category={ category} />\r\n                   )\r\n               }\r\n           </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}